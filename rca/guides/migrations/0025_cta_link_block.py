# Generated by Django 4.2.11 on 2024-09-19 10:54

from django.db import migrations
import rca.navigation.models
import rca.utils.blocks.embeds
import wagtail.blocks
import wagtail.contrib.typed_table_block.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ("guides", "0024_add_shorthand_fields"),
    ]

    operations = [
        migrations.AlterField(
            model_name="guidepage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    (
                        "anchor_heading",
                        wagtail.blocks.CharBlock(
                            form_classname="full title",
                            icon="title",
                            template="patterns/molecules/streamfield/blocks/anchor_heading_block.html",
                        ),
                    ),
                    (
                        "heading",
                        wagtail.blocks.CharBlock(
                            form_classname="full title",
                            icon="title",
                            template="patterns/molecules/streamfield/blocks/heading_block.html",
                        ),
                    ),
                    ("paragraph", wagtail.blocks.RichTextBlock()),
                    (
                        "image",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock()),
                                ("caption", wagtail.blocks.CharBlock(required=False)),
                                (
                                    "decorative",
                                    wagtail.blocks.BooleanBlock(
                                        help_text="Toggle to make image decorative so they can be ignored by assistive technologies.",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "quote",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "quote",
                                    wagtail.blocks.CharBlock(
                                        form_classname="title",
                                        help_text="Enter quote text only, there is no need to add quotation marks",
                                    ),
                                ),
                                ("author", wagtail.blocks.CharBlock(required=False)),
                                ("job_title", wagtail.blocks.CharBlock(required=False)),
                            ]
                        ),
                    ),
                    (
                        "embed",
                        wagtail.embeds.blocks.EmbedBlock(
                            help_text="Add a URL from these providers: YouTube, Vimeo, SoundCloud, Twitter.",
                            label="Embed media",
                        ),
                    ),
                    (
                        "table",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "table",
                                    wagtail.contrib.typed_table_block.blocks.TypedTableBlock(
                                        [
                                            (
                                                "text",
                                                wagtail.blocks.RichTextBlock(
                                                    features=["bold", "italic", "link"]
                                                ),
                                            )
                                        ]
                                    ),
                                ),
                                (
                                    "first_row_is_header",
                                    wagtail.blocks.BooleanBlock(
                                        default=True,
                                        label="The first row of columns are headers",
                                        required=False,
                                    ),
                                ),
                                (
                                    "first_col_is_header",
                                    wagtail.blocks.BooleanBlock(
                                        default=False,
                                        label="The first column of each row is a header",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "jw_video",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.blocks.CharBlock(
                                        help_text="Optional title to identify the video. Not shown on the page.",
                                        required=False,
                                    ),
                                ),
                                (
                                    "video_url",
                                    wagtail.blocks.URLBlock(
                                        help_text="The URL of the video to show.",
                                        max_length=1000,
                                    ),
                                ),
                                (
                                    "poster_image",
                                    wagtail.images.blocks.ImageChooserBlock(
                                        help_text="The poster image to show as a placeholder for the video. For best results use an image 1920x1080 pixels"
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "cookie_snippet_block",
                        rca.utils.blocks.embeds.CookieSnippetBlock(
                            "utils.CookieButtonSnippet"
                        ),
                    ),
                    (
                        "cta_link",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "url",
                                    rca.navigation.models.URLOrRelativeURLBLock(
                                        required=False
                                    ),
                                ),
                                (
                                    "page",
                                    wagtail.blocks.PageChooserBlock(required=False),
                                ),
                                (
                                    "title",
                                    wagtail.blocks.CharBlock(
                                        help_text="Leave blank to use the page's own title, required if using a URL",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                ],
                blank=True,
            ),
        ),
    ]
