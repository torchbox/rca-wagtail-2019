# Generated by Django 2.2.12 on 2021-01-10 18:02

import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
from django.db import migrations, models

import rca.navigation.models


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailcore", "0052_pagelogentry"),
        ("schools", "0010_research_collaborators"),
    ]

    operations = [
        migrations.AddField(
            model_name="schoolpage",
            name="programmes_cta_block",
            field=wagtail.fields.StreamField(
                [
                    (
                        "call_to_action",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.blocks.CharBlock(
                                        help_text="A large heading diplayed at the top of block",
                                        required=False,
                                    ),
                                ),
                                (
                                    "description",
                                    wagtail.blocks.CharBlock(required=False),
                                ),
                                (
                                    "page",
                                    wagtail.blocks.PageChooserBlock(
                                        required=False
                                    ),
                                ),
                                (
                                    "link",
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                "title",
                                                wagtail.blocks.CharBlock(
                                                    required=False
                                                ),
                                            ),
                                            (
                                                "url",
                                                wagtail.blocks.URLBlock(
                                                    required=False
                                                ),
                                            ),
                                        ],
                                        help_text="An optional link to display below the expanded content",
                                        required=False,
                                    ),
                                ),
                            ],
                            label="text promo",
                        ),
                    )
                ],
                blank=True,
                verbose_name="Call to action",
            ),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="programmes_external_links",
            field=wagtail.fields.StreamField(
                [
                    (
                        "link",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "url",
                                    rca.navigation.models.URLOrRelativeURLBLock(
                                        required=False
                                    ),
                                ),
                                (
                                    "page",
                                    wagtail.blocks.PageChooserBlock(
                                        required=False
                                    ),
                                ),
                                (
                                    "title",
                                    wagtail.blocks.CharBlock(
                                        help_text="Leave blank to use the page's own title, required if using a URL",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="Links",
            ),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="programmes_links_heading",
            field=models.CharField(
                blank=True, max_length=125, verbose_name="Links heading"
            ),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="related_programmes_summary",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="related_programmes_title",
            field=models.CharField(blank=True, max_length=120),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="related_short_courses_summary",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="schoolpage",
            name="related_short_courses_title",
            field=models.CharField(blank=True, max_length=120),
        ),
        migrations.CreateModel(
            name="SchoolPageRelatedShortCourse",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_short_courses",
                        to="schools.SchoolPage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
