# Generated by Django 2.2.9 on 2020-04-13 14:49

import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("programmes", "0051_update_revisions"),
        ("wagtailcore", "0041_group_collection_permissions_verbose_name_plural"),
        ("documents", "0003_customdocument_file_hash"),
        ("images", "0002_customimage_file_hash"),
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="projectpage",
            name="body",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "quote_block",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "quote",
                                    wagtail.core.blocks.CharBlock(classname="title"),
                                ),
                                (
                                    "author",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                (
                                    "job_title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                            ]
                        ),
                    ),
                    (
                        "rich_text_block",
                        wagtail.core.blocks.RichTextBlock(
                            features=[
                                "h2",
                                "h3",
                                "bold",
                                "italic",
                                "image",
                                "ul",
                                "ol",
                                "link",
                            ]
                        ),
                    ),
                    (
                        "link_block",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                ("url", wagtail.core.blocks.URLBlock(required=False)),
                            ]
                        ),
                    ),
                ],
                blank=True,
                verbose_name="General information about the project",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="contact_email",
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="contact_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.CustomImage",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="contact_text",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="contact_url",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="end_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="funders",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "link",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                ("url", wagtail.core.blocks.URLBlock(required=False)),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="Links to funders",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="funding",
            field=models.CharField(blank=True, max_length=250),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="gallery",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "slide",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                ("image", wagtail.images.blocks.ImageChooserBlock()),
                                (
                                    "author",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                ("link", wagtail.core.blocks.URLBlock(required=False)),
                                (
                                    "course",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="Gallery",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="hero_colour_option",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (1, "Light text on dark image"),
                    (2, "dark text on light image"),
                ],
                default=1,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="projectpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.CustomImage",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="introduction",
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="introduction_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.CustomImage",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="more_information",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "accordion_block",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "heading",
                                    wagtail.core.blocks.CharBlock(
                                        help_text="A large heading diplayed next to the block",
                                        required=False,
                                    ),
                                ),
                                (
                                    "preview_text",
                                    wagtail.core.blocks.CharBlock(
                                        help_text="The text to display when the accordion is collapsed",
                                        required=False,
                                    ),
                                ),
                                (
                                    "body",
                                    wagtail.core.blocks.RichTextBlock(
                                        features=[
                                            "h2",
                                            "h3",
                                            "bold",
                                            "italic",
                                            "image",
                                            "ul",
                                            "ol",
                                            "link",
                                        ],
                                        help_text="The content shown when the accordion expanded",
                                    ),
                                ),
                                (
                                    "link",
                                    wagtail.core.blocks.StructBlock(
                                        [
                                            (
                                                "title",
                                                wagtail.core.blocks.CharBlock(
                                                    required=False
                                                ),
                                            ),
                                            (
                                                "url",
                                                wagtail.core.blocks.URLBlock(
                                                    required=False
                                                ),
                                            ),
                                        ],
                                        help_text="An optional link to display below the expanded content",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="More information",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="partners",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "link",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                ("url", wagtail.core.blocks.URLBlock(required=False)),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="Links to partners",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="quote_carousel",
            field=wagtail.core.fields.StreamField(
                [
                    (
                        "quote",
                        wagtail.core.blocks.StructBlock(
                            [
                                (
                                    "quote",
                                    wagtail.core.blocks.CharBlock(classname="title"),
                                ),
                                (
                                    "author",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                                (
                                    "job_title",
                                    wagtail.core.blocks.CharBlock(required=False),
                                ),
                            ]
                        ),
                    )
                ],
                blank=True,
                verbose_name="Quote carousel",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="specification_document",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="documents.CustomDocument",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="start_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="projectpage", name="video", field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="video_caption",
            field=models.CharField(
                blank=True,
                help_text="The text dipsplayed next to the video play button",
                max_length=80,
            ),
        ),
        migrations.CreateModel(
            name="ProjectPageSubjectPlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subjects",
                        to="projects.ProjectPage",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="projects",
                        to="programmes.Subject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectPageRelatedStaff",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("first_name", models.CharField(max_length=125)),
                ("surname", models.CharField(max_length=125)),
                ("role", models.CharField(blank=True, max_length=125)),
                ("description", models.TextField(blank=True)),
                ("link", models.URLField(blank=True)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_staff",
                        to="projects.ProjectPage",
                    ),
                ),
            ],
            options={"ordering": ["sort_order"], "abstract": False,},
        ),
        migrations.CreateModel(
            name="ProjectPageProjectLeadStaff",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("first_name", models.CharField(max_length=125)),
                ("surname", models.CharField(max_length=125)),
                ("role", models.CharField(blank=True, max_length=125)),
                ("description", models.TextField(blank=True)),
                ("link", models.URLField(blank=True)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_lead",
                        to="projects.ProjectPage",
                    ),
                ),
            ],
            options={"ordering": ["sort_order"], "abstract": False,},
        ),
    ]
