.accordion {
    $root: &;
    @include z-index(above-gridlines);
    transition: background-color $transition;
    position: relative;

    .bg--dark & {
        border-bottom: 1px solid $color--grid-line-light;
        border-right: 1px solid $color--grid-line-light;
        background-color: $color--link-lightbg;
    }

    .bg--light & {
        border-right: 1px solid $color--grid-line-dark;
        border-bottom: 1px solid $color--grid-line-dark;
        background-color: $color--link-darkbg;
    }

    @include media-query(large) {
        grid-column: 2 / span 3;
    }

    &:first-child {
        #{$root}__link {
            &::after {
                top: -1px; // to account for border
            }
        }

        &::before {
            top: -1px; // to account for border
        }

        .bg--dark & {
            border-top: 1px solid $color--grid-line-light;
        }

        .bg--light & {
            border-top: 1px solid $color--grid-line-dark;
        }
    }

    // left hand colour block
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 1px;
        right: 0;
        bottom: -1px; // to account for border
        transform: translate3d(-100%, 0, 0);
        opacity: 0;
        transition: opacity $transition;

        .bg--light & {
            background-color: $color--black;
        }

        .bg--dark & {
            background-color: $color--white;
        }
    }

    &.is-open {
        @include z-index(under-gridlines);

        &::before {
            opacity: 1;
        }

        .bg--light & {
            background-color: $color--black;
            color: $color--white;
        }

        .bg--dark & {
            background-color: $color--white;
            color: $color--black;
        }
    }

    &__link {
        display: grid;
        align-items: center;
        font-family: $font--primary;
        padding-top: $gutter;
        padding-bottom: $gutter;
        position: relative;
        outline: 0;

        &:focus,
        &:active,
        &:hover {
            cursor: pointer;
        }

        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 1px;
            bottom: 0;
            transform: translate3d(100%, 0, 0);
            opacity: 0;
            transition: opacity $transition;
            pointer-events: none;

            .is-open & {
                opacity: 1;
            }

            .bg--light & {
                background-color: $color--black;
            }

            .bg--dark & {
                background-color: $color--white;
            }
        }

        .bg--dark & {
            color: $color--link-darkbg;
        }

        .bg--light & {
            color: $color--link-lightbg;
        }

        .is-open & {
            .bg--dark & {
                border-bottom: 1px solid $color--grid-line-dark;
            }

            .bg--light & {
                border-bottom: 1px solid $color--grid-line-light;
            }
        }

        @include media-query(large) {
            grid-template-columns: 1fr 1fr 1fr;
        }

        &--with-preview {
            align-items: flex-start;
            padding-bottom: ($gutter * 1.75);
        }
    }

    &__heading {
        transition: color $transition;

        .bg--dark & {
            color: $color--link-darkbg;
        }

        .bg--light & {
            color: $color--link-lightbg;
        }

        .is-open & {
            .bg--dark & {
                color: $color--link-lightbg;
            }

            .bg--light & {
                color: $color--link-darkbg;
            }
        }
    }

    &__preview-text {
        color: $color--meta;
        margin: 0;
        transition: color $transition;

        .is-open & {
            .bg--dark & {
                color: $color--link-lightbg;
            }

            .bg--light & {
                color: $color--link-darkbg;
            }
        }

        @include media-query(large) {
            max-width: 65%;
        }
    }

    &__meta {
        grid-column: 2 / span 2;
        display: flex;
    }

    &__icon {
        justify-self: flex-end;
        margin-right: $gutter;
        margin-left: auto;

        .bg--dark & {
            fill: $color--link-darkbg;
        }

        .bg--light & {
            fill: $color--link-lightbg;
        }

        .is-open & {
            .bg--dark & {
                fill: $color--link-lightbg;
            }

            .bg--light & {
                fill: $color--link-darkbg;
            }
        }

        &--plus {
            .is-open & {
                display: none;
            }
        }

        &--minus {
            display: none;

            .is-open & {
                display: block;
            }
        }
    }

    &__content {
        display: none;

        .is-open & {
            display: grid;

            @include media-query(large) {
                grid-template-columns: 1fr 1fr 1fr;
            }
        }
    }

    &__content-container {
        @include media-query(large) {
            grid-column: 2 / span 2;
            padding-top: ($gutter * 2);
            padding-right: ($gutter * 5.75);
            padding-bottom: ($gutter * 3);
        }
    }
}
