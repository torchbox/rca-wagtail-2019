# Generated by Django 2.2.12 on 2020-06-02 19:20

import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0041_group_collection_permissions_verbose_name_plural"),
        ("images", "0003_extends_image_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="AreaOfExpertise",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="StaffPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.Page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Search description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                (
                    "staff_title",
                    models.CharField(
                        blank=True, help_text="E.G Dr, Professor", max_length=255
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("job_title", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("introduction", models.TextField(blank=True)),
                ("body", wagtail.core.fields.RichTextField(blank=True)),
                (
                    "research_highlights_title",
                    models.CharField(
                        blank=True,
                        help_text="The title value displayed above the Research highlights gallery showing project pages",
                        max_length=120,
                    ),
                ),
                (
                    "gallery",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "slide",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        (
                                            "author",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.core.blocks.URLBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "course",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Gallery",
                    ),
                ),
                (
                    "more_information_title",
                    models.CharField(default="More information", max_length=80),
                ),
                (
                    "more_information",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "accordion_block",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.core.blocks.CharBlock(
                                                help_text="A large heading diplayed next to the block",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "preview_text",
                                            wagtail.core.blocks.CharBlock(
                                                help_text="The text to display when the accordion is collapsed",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "body",
                                            wagtail.core.blocks.RichTextBlock(
                                                features=[
                                                    "h2",
                                                    "h3",
                                                    "bold",
                                                    "italic",
                                                    "image",
                                                    "ul",
                                                    "ol",
                                                    "link",
                                                ],
                                                help_text="The content shown when the accordion expanded",
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.core.blocks.StructBlock(
                                                [
                                                    (
                                                        "title",
                                                        wagtail.core.blocks.CharBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                    (
                                                        "url",
                                                        wagtail.core.blocks.URLBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                ],
                                                help_text="An optional link to display below the expanded content",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="More information",
                    ),
                ),
                (
                    "related_links",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "link",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.core.blocks.URLBlock(
                                                required=False
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Related Links",
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
                (
                    "profile_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.CustomImage",
                    ),
                ),
            ],
            options={"abstract": False,},
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="StaffPageRelatedSchoolPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_school_pages",
                        to="people.StaffPage",
                    ),
                ),
            ],
            options={"ordering": ["sort_order"], "abstract": False,},
        ),
        migrations.CreateModel(
            name="StaffPageRelatedResearchPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_research_centre_pages",
                        to="people.StaffPage",
                    ),
                ),
            ],
            options={"ordering": ["sort_order"], "abstract": False,},
        ),
        migrations.CreateModel(
            name="StaffPagePageRelatedProjects",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.Page",
                    ),
                ),
                (
                    "source_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_projects",
                        to="people.StaffPage",
                    ),
                ),
            ],
            options={"ordering": ["sort_order"], "abstract": False,},
        ),
        migrations.CreateModel(
            name="StaffPageAreOfExpertisePlacement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area_of_expertise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to="people.AreaOfExpertise",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_area_of_expertise",
                        to="people.StaffPage",
                    ),
                ),
            ],
        ),
    ]
