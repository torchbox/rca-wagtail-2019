# Generated by Django 3.1.10 on 2021-07-22 11:34

import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0062_comment_models_and_pagesubscription"),
        ("forms", "0006_adds_key_details_field"),
        ("images", "0003_extends_image_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="DonationFormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "listing_title",
                    models.CharField(
                        blank=True,
                        help_text="Override the page title used when this page appears in listings",
                        max_length=255,
                    ),
                ),
                (
                    "listing_summary",
                    models.CharField(
                        blank=True,
                        help_text="The text summary used when this page appears in listings. It's also used as the description for search engines if the 'Search description' field above is not defined.",
                        max_length=255,
                    ),
                ),
                (
                    "contact_model_title",
                    models.CharField(
                        blank=True,
                        help_text="Maximum length of 120 characters",
                        max_length=120,
                        verbose_name="Contact title",
                    ),
                ),
                (
                    "contact_model_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Contact email"
                    ),
                ),
                (
                    "contact_model_url",
                    models.URLField(blank=True, verbose_name="Contact url"),
                ),
                (
                    "contact_model_text",
                    models.CharField(
                        blank=True,
                        help_text="Maximum length of 250 characters",
                        max_length=250,
                        verbose_name="Contact text",
                    ),
                ),
                (
                    "contact_model_link_text",
                    models.CharField(
                        blank=True,
                        help_text="Optional text for the linked url, form or email",
                        max_length=120,
                        verbose_name="Contact link text",
                    ),
                ),
                ("introduction", models.CharField(blank=True, max_length=500)),
                (
                    "body",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "anchor_heading",
                                wagtail.core.blocks.CharBlock(
                                    form_classname="full title",
                                    icon="title",
                                    template="patterns/molecules/streamfield/blocks/anchor_heading_block.html",
                                ),
                            ),
                            (
                                "heading",
                                wagtail.core.blocks.CharBlock(
                                    form_classname="full title",
                                    icon="title",
                                    template="patterns/molecules/streamfield/blocks/heading_block.html",
                                ),
                            ),
                            ("paragraph", wagtail.core.blocks.RichTextBlock()),
                            (
                                "image",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        (
                                            "caption",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "quote",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.core.blocks.CharBlock(
                                                form_classname="title",
                                                help_text="Enter quote text only, there is no need to add quotation marks",
                                            ),
                                        ),
                                        (
                                            "author",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "job_title",
                                            wagtail.core.blocks.CharBlock(
                                                required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "embed",
                                wagtail.embeds.blocks.EmbedBlock(
                                    help_text="Add a URL from these providers: YouTube, Vimeo, SoundCloud, Twitter.",
                                    label="Embed media",
                                ),
                            ),
                        ]
                    ),
                ),
                (
                    "further_information_title",
                    models.CharField(blank=True, max_length=120),
                ),
                (
                    "further_information",
                    wagtail.core.fields.StreamField(
                        [
                            (
                                "accordion_block",
                                wagtail.core.blocks.StructBlock(
                                    [
                                        (
                                            "heading",
                                            wagtail.core.blocks.CharBlock(
                                                help_text="A large heading diplayed next to the block",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "preview_text",
                                            wagtail.core.blocks.CharBlock(
                                                help_text="The text to display when the accordion is collapsed",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "body",
                                            wagtail.core.blocks.RichTextBlock(
                                                features=[
                                                    "h2",
                                                    "h3",
                                                    "bold",
                                                    "italic",
                                                    "image",
                                                    "ul",
                                                    "ol",
                                                    "link",
                                                ],
                                                help_text="The content shown when the accordion expanded",
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.core.blocks.StructBlock(
                                                [
                                                    (
                                                        "title",
                                                        wagtail.core.blocks.CharBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                    (
                                                        "url",
                                                        wagtail.core.blocks.URLBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                ],
                                                help_text="An optional link to display below the expanded content",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        verbose_name="Further information",
                    ),
                ),
                (
                    "contact_model_form",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="forms.formpage",
                        verbose_name="Contact form",
                    ),
                ),
                (
                    "contact_model_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                        verbose_name="Contact image",
                    ),
                ),
                (
                    "listing_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Choose the image you wish to be displayed when this page appears in listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={"abstract": False,},
            bases=("wagtailcore.page", models.Model),
        ),
    ]
